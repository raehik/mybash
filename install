#!/bin/bash

branch="master"

# ask for install directory
echo -n "Install to (relative/absolute path)(defaults to '~/.mybash.d'): "
read MYBASH_DIR
[ -z $MYBASH_DIR ] && MYBASH_DIR="${HOME}/.mybash.d" # if input is null, use default
[[ ! $MYBASH_DIR == /* ]] && MYBASH_DIR="$(pwd)/${MYBASH_DIR}" # if path is relative, prepend working dir

# be careful and verbose about directory
if [ -e $MYBASH_DIR ]; then	# if is existing dir
	echo -n "WARNING: Directory already exists. Contents will be deleted. Continue? (y/n): "
	read dir_cont
	if [ "$dir_cont" == "y" ] || [ "$dir_cont" == "Y" ]; then
		echo "Deleting ${MYBASH_DIR}..."
		rm -r $MYBASH_DIR
	elif [ "$dir_cont" == "n" ] || [ "$dir_cont" == "N" ]; then
		echo "Exiting..."
		exit 1
	else
		echo "ERROR: Your input was not y/n (was ${dir_cont})"
		exit 1
	fi
fi

# download and untar
echo "Downloading..."
curl -L -s https://api.github.com/repos/raehik/mybash/tarball/${branch} | tar -zx -C /tmp

# Move output. Naming scheme is (github user)-(github repo)-(part of hash)
# so match any hash
echo "Moving to ${MYBASH_DIR}..."
mv /tmp/raehik-mybash-* ${MYBASH_DIR} # also changes folder name

# backup .bashrc because we are overly careful
echo "Backing up .bashrc to .bashrc.bak..."
cp ${HOME}/.bashrc ${HOME}/.bashrc.bak

# source main in .bashrc
echo "Appending '. ${MYBASH_DIR}/main' into ~/.bashrc... (later make this work for all shells)"
echo ". ${MYBASH_DIR}/main" >> ${HOME}/.bashrc # later, the filename will depend on the shell you choose (it should then ask to check that your .(shell)rc is what I think it is)

if [ $? -eq 0 ]; then
	echo "Install complete. Restart your shell or start a new terminal. (does exec bash work in login shell??)"
else
	echo "Something went wrong. Please check your .bashrc and make sure ${MYBASH_DIR} is populated."
	exit 1
fi
